name: Cypress Tests

on: [push]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    environment: preview
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v6
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: test-${{ github.run_id }}-${{ matrix.containers }}
          role: neondb_owner
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Start app
        run: pnpm dev &
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_URL: http://localhost:3000

      - name: Wait for app
        run: pnpm dlx wait-on http://localhost:3000 --timeout 60000 --strict

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('package.json') }}
          restore-keys: cypress-${{ runner.os }}-

      - name: Run Cypress tests
        run: pnpm cypress run --record --parallel --group "container-${{ matrix.containers }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_DATABASE_URL: ${{ steps.create-branch.outputs.db_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_NO_WARNINGS: 1
          TERM: xterm

      - name: Delete neon branch
        if: always()
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: test-${{ github.run_id }}-${{ matrix.containers }}
          api_key: ${{ secrets.NEON_API_KEY }}
